<%
	modal_frame = request.headers['Turbo-Frame']
	record = instance_variable_get("@#{model_name}")
	klass = record.class
	time_to_close = 6

	if @success_message
		alert_class = 'alert-success'
		icon = 'bi-check-circle'
		title = 'Success'
	else
		alert_class = 'alert-danger'
		icon = 'bi-exclamation-triangle'
		title = 'Error'
	end

	redirect_back_url = request.headers['Referer']
%>

<%= turbo_stream.update modal_frame do %>
	<div class='alert <%= alert_class %> mb-0' role='alert'>
		<h2 class='d-flex align-items-center'>
			<i class='bi icon-3xl me-2 <%= icon %>'></i>
			<%= title %>
		</h2>
		<p class='mb-1 mt-3'><%= @success_message || @error_message %></p>
		<p class='text-secondary mb-0' id='delete-result-message'>
			This message will close in <span><%= time_to_close %></span> seconds.
		</p>
	</div>

	<script>
		(function() {
			var controller = getOpenedModal();
			if (!controller)
				return;

			var destroyedMessage = document.querySelector('#delete-result-message > span');
			if (!destroyedMessage)
				return;

			var time = parseInt(destroyedMessage.innerHTML, 10) || 1;
			var intervalClose = setInterval(() => {
				time--;
				destroyedMessage.innerHTML = time;
				if (time <= 0) {
					clearInterval(intervalClose);
				}
			}, 1000);

			var redirectFnFired = false;
			var redirectFn = function() {
				if (redirectFnFired)
					return;
				
				redirectFnFired = true;
				const willRedirect = destroyedMessage.closest('.alert').classList.contains('alert-success');
				if (willRedirect)
					Turbo.visit('<%= redirect_back_url.presence || polymorphic_path(controller_name) %>');
			};

			var timeoutClose = setTimeout(() => {
				controller.closeModal();

				setTimeout(redirectFn, 500);
			}, time * 1000);

			controller.setModalHeader('Record Destroyed');
			controller.element.addEventListener('modals-controller:before-close', () => {
				redirectFn();
				clearInterval(intervalClose);
				clearTimeout(timeoutClose);
			});
		})();
	</script>
<% end %>
